max <- max(v2)
max_index <- v[v2 == max]
min <- min(max_index)
return(list(max, min))
}
g <- function(x) {
x^2
}
MaxAndMin(g, -1, 1, 0.1)
MaxAndMin <- function(f, x, y, s) {
# Returns a list of the max of an arbitrary function applied to a vector and the
# minimum of the numbers that produce that max in the original vector before the
# function is applied.
#
#
v <- seq(x, y, by = s)
v2 <- sapply(v, f)
max <- max(v2)
max_index <- v[v2 == max]
min <- min(max_index)
return(list(max, min))
}
# Example Usage
g <- function(x) {
x^2
}
MaxAndMin(g, -1, 1, 0.1)
ss <- function(x) {
x <- x[!is.na(x)]
a <- x[1]
for (i in 2:length(x)) {
a[i] <- a[i - 1] + x[i]
}
a <- a / (1:length(x))
foo <- x
cc <- 0
for(i in 1:length(foo)) {
x <- foo[1:i]
c <- sort(x)
if(length(x) %% 2 == 0) {
cc[i] <- (c[floor((length(c) + 1) / 2)] + c[ceiling((length(c) + 1) / 2)]) / 2
} else {
cc[i] <- c[c(length(c) + 1) / 2]
}
}
}
ss(c(5,10,15,20,5,10,15,20))
ss(1:10)
ss(c(1,2,6,2,4,5))
ss <- function(x) {
x <- x[!is.na(x)]
a <- x[1]
for (i in 2:length(x)) {
a[i] <- a[i - 1] + x[i]
}
a <- a / (1:length(x))
foo <- x
cc <- 0
for(i in 1:length(foo)) {
x <- foo[1:i]
c <- sort(x)
if(length(x) %% 2 == 0) {
cc[i] <- (c[floor((length(c) + 1) / 2)] + c[ceiling((length(c) + 1) / 2)]) / 2
} else {
cc[i] <- c[c(length(c) + 1) / 2]
}
}
return(list(a, cc))
}
ss(c(5,10,15,20,5,10,15,20))
ss(1:10)
ss(c(1,2,6,2,4,5))
d<-iris
dd<-unique(d[,5])
d1<-d[which(d[,5]==dd[1]),]
d2<-d[which(d[,5]==dd[2]),]
d3<-d[which(d[,5]==dd[3]),]
d1[,1] <- mean(d1[,1])
d1[,2] <- mean(d1[,2])
d1[,3] <- mean(d1[,3])
d1[,4] <- mean(d1[,4])
d2[,1] <- mean(d2[,1])
d2[,2] <- mean(d2[,2])
d2[,3] <- mean(d2[,3])
d2[,4] <- mean(d2[,4])
d3[,1] <- mean(d3[,1])
d3[,2] <- mean(d3[,2])
d3[,3] <- mean(d3[,3])
d3[,4] <- mean(d3[,4])
ddd<-rbind(d1[1,],d2[1,],d3[1,])
rownames(ddd) <- NULL
View(ddd)
View(dd)
View(d)
d <- iris
d %>%
group_by(species) %>%
summarise(mean)
d <- iris
d %>%
group_by(Species) %>%
summarise(mean)
d <- iris
d %>%
arrange(Species)
d %>%
arrange(Species, Sepal.Length)
d <- iris %>%
gather(Species)
View(d)
d <- iris
View(d)
d <- iris %>%
group_by(Species) %>%
summarise(mean = mean(value))
d <- iris %>%
group_by(Species, Sepal.Length) %>%
summarise(mean = mean(value))
d <- iris %>%
group_by(Species) %>%
summarise(mean = mean(Sepal.Length))
View(d)
d <- iris %>%
group_by(Species) %>%
summarise(Sepal.Length = mean(Sepal.Length),
Sepal.Width = mean(Sepal.Width),
Petal.Length = mean(Petal.Length),
Petal.Width = mean(Petal.Width))
View(d)
d <- iris %>%
group_by(Species) %>%
summarise(Sepal.Length = mean(Sepal.Length),
Sepal.Width = mean(Sepal.Width),
Petal.Length = mean(Petal.Length),
Petal.Width = mean(Petal.Width)) %>%
select(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width, Species)
View(d)
d <- iris %>%
group_by(Species) %>%
summarise(Sepal.Length = mean(Sepal.Length),
Sepal.Width = mean(Sepal.Width),
Petal.Length = mean(Petal.Length),
Petal.Width = mean(Petal.Width)) %>%
select(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width, Species)
View(d)
japan_reactors <- japan_df %>%
select(name, reactor, type, const_start, op_start) %>%
mutate(op_start = dmy(op_start)) %>%
mutate(name_reactor = str_c(name, reactor)) %>%
mutate(type = factor(type)) %>%
mutate(names = str_replace_all(name_reactor, ".*[2-9]$", ""))
na.omit()
japan_reactors <- japan_df %>%
select(name, reactor, type, const_start, op_start) %>%
mutate(op_start = dmy(op_start)) %>%
mutate(name_reactor = str_c(name, reactor)) %>%
mutate(type = factor(type)) %>%
mutate(names = str_replace_all(name_reactor, ".*[2-9]$", "")) %>%
na.omit()
library(dplyr)
library(stringr)
japan_reactors <- japan_df %>%
select(name, reactor, type, const_start, op_start) %>%
mutate(op_start = dmy(op_start)) %>%
mutate(name_reactor = str_c(name, reactor)) %>%
mutate(type = factor(type)) %>%
mutate(names = str_replace_all(name_reactor, ".*[2-9]$", "")) %>%
na.omit()
library(rvest)
library(ggplot2)
library(dplyr)
library(stringr)
library(lubridate)
library(scales)
page <- "http://en.wikipedia.org/wiki/List_of_nuclear_reactors"
xpath <- '//div[@id="mw-content-text"]/table'
reactor_tbl <- page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
.[c(16, 23)] %>%
html_table(fill = TRUE)
# France Data Frame
france <- reactor_tbl[[1]]
names(france) <- c("name", "reactor", "type", "model", "status",
"net", "gross", "const_start", "op_start", "closure")
france_df <- france %>%
slice(-1) %>%
mutate(country = "France") %>%
mutate(const_start = dmy(const_start))
# Japan Data Frame
japan <- reactor_tbl[[2]]
names(japan) <- names(france)
japan_df <- japan %>%
slice(-1) %>%
mutate(country = "Japan") %>%
mutate(const_start = dmy(const_start))
# Joined Data Frame of Japanese and French reactors
france_and_japan <- full_join(france_df, japan_df) %>%
select(type, net, const_start, country) %>%
mutate(net = as.numeric(net)) %>%
mutate(type = factor(type)) %>%
na.omit()
levels(france_and_japan$type) <- c("", "Boiling Water",
"Fast Breeder", "Gas Cooled",
"Heavy Water Gas Cooled",
"Pressurized Water")
# Plot 1: Net Reactor Capacities in France and Japan
ggplot(france_and_japan, aes(x = const_start, y = net,
shape = type, color = country)) +
geom_point(size = 2, stroke = 0.25) +
scale_x_date(limits = as.Date(c("1954", "2005"), "%Y")) +
scale_y_continuous(limits = c(0, 1500), breaks = seq(0, 1500, 500)) +
labs(x = "Construction Start Date",
y = "Net Capacity (MW)",
title = "Net Reactor Capacities\n in France and Japan",
shape = "Reactor Type",
color = "Country")
japan_reactors <- japan_df %>%
select(name, reactor, type, const_start, op_start) %>%
mutate(op_start = dmy(op_start)) %>%
mutate(name_reactor = str_c(name, reactor)) %>%
mutate(type = factor(type)) %>%
mutate(names = str_replace_all(name_reactor, ".*[2-9]$", "")) %>%
na.omit()
View(japan_reactors)
help(package = ggplot2)
japan_reactors$names
japan_reactors <- japan_df %>%
select(name, reactor, type, const_start, op_start) %>%
mutate(op_start = dmy(op_start)) %>%
mutate(name_reactor = str_c(name, reactor)) %>%
mutate(type = factor(type)) %>%
mutate(names = str_replace_all(name_reactor, ".*[2-9]$", NA)) %>%
na.omit()
View(japan_reactors)
japan_reactors <- japan_df %>%
select(name, reactor, type, const_start, op_start) %>%
mutate(op_start = dmy(op_start)) %>%
mutate(name_reactor = str_c(name, reactor)) %>%
mutate(type = factor(type)) %>%
mutate(names = str_replace_all(name_reactor, ".*[2-9]$", "")) %>%
na.omit()
View(japan_reactors)
ggplot(japan_reactors, aes(x = const_start, y = name_reactor, color = type)) +
geom_segment(aes(xend = op_start, yend = name_reactor)) +
labs(x = "Date",
y = "Reactor Site",
title = "Construction Times for\n Japanese Nuclear Reactors",
color = "Reactor Type") +
scale_x_date(labels = date_format("%Y"),
breaks = as.Date(seq("1960-01-01", "2010-01-01", "5 years"))) +
scale_y_continuous(labels = names)
ggplot(japan_reactors, aes(x = const_start, y = name_reactor, color = type)) +
geom_segment(aes(xend = op_start, yend = name_reactor)) +
labs(x = "Date",
y = "Reactor Site",
title = "Construction Times for\n Japanese Nuclear Reactors",
color = "Reactor Type") +
scale_x_date(labels = date_format("%Y"),
breaks = as.Date(seq("1960-01-01", "2010-01-01", "5")))
library(shiny)
runApp("my_app")
getwd(0)
getwd()
runApp("/Users/anujdesai510/stat133-su2016/20-lesson/examples/001-histogram/")
runApp('stat133/labs6/my_first_app')
runApp('stat133/labs6/my_first_app')
runApp('stat133/labs6/my_first_app')
class(japan_reactors$name)
(japan_reactors$name)
(japan_reactors$names)
typeof(japan_reactors$names)
is.vector(japan_reactors$names)
page <- "http://www.basketball-reference.com/players/n/nashst01.html"
xpath <- '//table[@class="sortable row_summable stats_table"]'
table <- page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE)
library(readr)
library(rvest)
library(dplyr)
library(tidyr)
library(ggplot2)
page <- "http://www.basketball-reference.com/players/n/nashst01.html"
xpath <- '//table[@class="sortable row_summable stats_table"]'
table <- page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE)
table
View(table)
page %>%
read_html() %>%
html_nodes(xpath = xpath)
page <- "http://www.basketball-reference.com/players/n/nashst01.html"
xpath <- '//table[@class="sortable  row_summable stats_table"]'
table <- page %>%
read_html() %>%
html_nodes(xpath = xpath)
table
page <- "http://www.basketball-reference.com/players/n/nashst01.html"
xpath <- '//table[@class="sortable  row_summable stats_table" & @id="totals"]'
table <- page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE)
page <- "http://www.basketball-reference.com/players/n/nashst01.html"
xpath <- '//table[@class="sortable  row_summable stats_table" and @id="totals"]'
table <- page %>%
read_html() %>%
html_nodes(xpath = xpath)
table
page <- "http://www.basketball-reference.com/players/n/nashst01.html"
xpath <- '//table[@class="sortable  row_summable stats_table" and @id="totals"]'
table <- page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE)
View(table)
nash_page <- "http://www.basketball-reference.com/players/n/nashst01.html"
xpath <- '//table[@class="sortable  row_summable stats_table" and @id="totals"]'
nash <- nash_page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE)
steph_page <- "http://www.basketball-reference.com/players/c/curryst01.html"
steph <- steph_page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE)
View(steph)
View(nash)
nash %>%
sort()
sort(nash$PTS)
nash$PTS
names(nash)
nash %>%
select(-c(2,3,4,5,7))
nash %>%
select(c(2))
nash %>%
select(2)
class(nash)
nash_page <- "http://www.basketball-reference.com/players/n/nashst01.html"
xpath <- '//table[@class="sortable  row_summable stats_table" and @id="totals"]'
nash <- nash_page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE) %>%
as.data.frame()
steph_page <- "http://www.basketball-reference.com/players/c/curryst01.html"
steph <- steph_page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE) %>%
as.data.frame()
class(steph)
names(steph)
select(-c(Age, Tm, Lg, Pos, GS))
nash %>%
select(-c(Age, Tm, Lg, Pos, GS))
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS))
View(nash_df)
install.packages("radarchart")
library(readr)
library(rvest)
library(dplyr)
library(tidyr)
library(ggplot2)
library(radarchart)
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS))
steph_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS))
left_join(nash_df, steph_df)
combined <- left_join(nash_df, steph_df)
combined
View(combined)
combined <- full_join(nash_df, steph_df)
View(combined)
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS)) %>%
slice(-c(1:4, 16:23))
View(nash_df)
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS)) %>%
slice(-c(1:4, 16:18, 20:23))
View(nash_df)
View(steph_df)
steph_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS))
steph_df <- steph %>%
select(-c(Age, Tm, Lg, Pos, GS))
View(steph_df)
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
slice(-c(1:4, 16:18, 20:23))
steph_df <- steph %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB))
View(steph_df)
View(nash_df)
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
slice(-c(1:4, 16:18, 20:23)) %>%
mutate(AST-TO = AST/TO)
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
slice(-c(1:4, 16:18, 20:23)) %>%
mutate(AST_TO = AST/TO)
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
slice(-c(1:4, 16:18, 20:23)) %>%
mutate(AST_TO = AST/TOV)
View(nash_df)
steph_df <- steph %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
mutate(AST_TO = AST/TOV)
View(steph_df)
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
slice(-c(1:4, 16:18, 20:23)) %>%
mutate(TOV = AST/TOV)
steph_df <- steph %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
mutate(TOV = AST/TOV)
View(steph_df)
View(nash_df)
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
slice(-c(1:4, 16:18, 20:23)) %>%
mutate(AST_TO = AST/TOV)
steph_df <- steph %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
mutate(AST_TO = AST/TOV)
View(steph_df)
View(full_join(nash_df, steph_df))
nash_df <- nash %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
slice(-c(1:4, 16:18, 20:23)) %>%
mutate(AST_TO = AST/TOV) %>%
mutate(Player = "Nash")
steph_df <- steph %>%
select(-c(Age, Tm, Lg, Pos, GS, ORB, DRB)) %>%
mutate(AST_TO = AST/TOV) %>%
mutate(Player = "Curry")
combine <- full_join(nash_df, steph_df)
View(combine)
ggplot(combine, aes(x = Player, y = AST_TO)) +
geom_point()
ggplot(combine, aes(x = Player, y = AST_TO)) +
geom_point() +
facet_wrap(~Season)
help(package = ggplot2)
combine <- full_join(nash_df, steph_df) %>%
gather(Player)
View(combine)
shiny::runApp('stat133/hw6/rosling_app')
runApp('stat133/hw6/rosling_app')
ls
library(rsconnect)
getwd()
deployApp("/Users/anujdesai510/stat133/hw6/rosling_app")
setwd("/Users/anujdesai510/stat133-su2016/23-lesson/lab")
library(jsonlite)
earthquakes <- fromJSON("all_month.geojson")
summary(earthquakes)
earthquakes <- earthquakes$features
usa <- map_data("usa")
ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3)
View(earthquakes)
View(usa)
View(earthquakes)
earthquakes <- earthquakes$bbox
View(earthquakes)
earthquakes
earthquakes <- fromJSON("all_month.geojson")
summary(earthquakes)
earthquakes <- earthquakes$bbox
View(earthquakes)
earthquakes <- earthquakes$features
earthquakes <- fromJSON("all_month.geojson")
earthquakes <- earthquakes$features
View(earthquakes)
earthquakes <- earthquakes %>%
select(properties.mag, properties.place, geometry.coordinates)
earthquakes$properties
earthquakes <- fromJSON("all_month.geojson")
earthquakes <- earthquakes$features
names(earthquakes)
class(earthquakes)
properties <- earthquakes$properties
class(properties)
geometry <- earthquakes$geometry
class(geometry)
View(properties)
View(geometry)
geometry <- earthquakes$geometry %>%
select(coordinates)
earthquakes <- fromJSON("all_month.geojson")
summary(earthquakes)
earthquakes <- earthquakes$features
properties <- earthquakes$properties %>%
select(mag, place)
geometry <- earthquakes$geometry %>%
select(coordinates)
View(geometry)
View(properties)
