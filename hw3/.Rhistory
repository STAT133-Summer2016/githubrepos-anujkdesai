female$n == head(sort(female$n, decreasing = TRUE), 3)), ]
group_by(baby90, sex)
View(baby90)
baby90 <- group_by(baby90, sex)
View(baby90)
baby90 <- group_by(baby90, sex, n)
View(baby90)
baby90
help(arrange)
ungroup(baby90)
arrange(baby90, count)
arrange(baby90, n)
arrange(baby90, sex)
View(baby90)
baby90 <- arrange(baby90, sex)
View(bab90)
View(baby90)
baby90 <- arrange(baby90, sex, count)
baby90 <- arrange(baby90, sex, n)
View(baby90)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
long <- gather(baby90, sex, n, -year)
View(long)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
long <- gather(baby90, n, sex, -year)
View(long)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, n)
View(baby90)
head(baby90$n, 6)
tail(baby90$n, 6)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
group_by(baby90, sex)
baby90 <- arrange(baby90, sex, n)
head(baby90$n, 6)
View(baby90)
tail(baby90$n, 6)
baby90 <- arrange(baby90, n)
View(baby90)
ungroup()
ungroup(baby90)
baby90 <- arrange(baby90, sex, n)
View(bab90)
View(babu90)
View(baby90)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, -n)
View(baby90)
head(baby90, 3)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, -n)
baby90 <- group_by(baby90, sex)
head(baby90, 3)
View(baby90)
help(by)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, -n)
baby90 <- group_by(baby90, sex)
by(baby90, head, 3)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, -n)
baby90 <- group_by(baby90, sex)
head(baby90, 3)
help(separate)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, -n)
baby90 <- separate(baby90, sex, c("female", "male"), "F")
View(baby90)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, -n)
baby90 <- separate(baby90, sex, c("F", "M"), "F", remove = F, convert = T)
View(baby90)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, -n)
baby90 <- separate(baby90, sex, c("F", "M"), "F", remove = T, convert = T)
View(baby90)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, -n)
baby90 <- split(baby90, baby90$sex)
View(baby90)
baby90
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, -n)
baby90 <- split(baby90, baby90$sex)
head(baby90, 3)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, sex, -n)
baby90 <- split(baby90, baby90$sex)
head(baby90)
head(baby90)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, -n)
head(baby90, 6)
help(sort)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, -n)
head(baby90, 6) %>%
sort()
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, -n)
top90 <- head(baby90, 6)
order(top90)
ungroup()
ungroup(baby90)
unsplit(baby90)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, -n)
top90 <- head(baby90, 6)
order(top90)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, -n)
top90 <- head(baby90, 6)
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, -n)
top90 <- head(baby90, 6)
top90[with(top90, order(sex, name))]
# Your code here
baby90 <- filter(babynames, babynames$year >= 1990 & babynames$year <= 1999)
baby90 <- arrange(baby90, -n)
top90 <- head(baby90, 6)
top90[with(top90, order(sex, name)), ]
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
for (i in 1:(length(num)-2)){
logicals <- c(num[i] == num[i+2])
print(which(logicals)[i])
}
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
for (i in 1:(length(num)-2)){
logicals <- c(num[i] == num[i+2])
print(which(logicals))
}
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
for (i in 1:(length(num)-2)){
logicals <- c(num[i] == num[i+2])
print(any(which(logicals)))
}
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
for (i in 1:(length(num)-2)){
logicals <- c(num[i] == num[i+2])
print(c(which(logicals)))
}
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
for (i in 1:(length(num)-2)){
logicals <- num[i] == num[i+2]
print(c(which(logicals)))
}
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
for (i in 1:(length(num)-2)){
logicals <- num[i] == num[i+2]
return(logicals)
}
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
for (i in 1:(length(num)-2)){
if(num[i] == num[i+2]) {
return(TRUE)
} else {
return(FALSE)
}
}
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
for (i in 1:(length(num)-2)){
logicals <- c(num[i] == num[i+2])
length(logicals)
}
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
for (i in 1:(length(num)-2)){
logicals <- c(num[i] == num[i+2])
length(logicals)
}
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
for (i in 1:(length(num)-2)){
logicals <- c(num[i] == num[i+2])
print(length(logicals))
}
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
logicals <- c()
for (i in 1:(length(num)-2)) {
logicals <- c(num[i] == num[i+2])
}
print(logicals)
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
{}
}
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
logicals <- c()
for (i in 1:(length(num)-2)) {
logicals <- c(num[i] == num[i+2])
}
print(logicals)
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
logicals <- c()
for (i in 1:(length(num)-2)) {
logicals <- c(logicals, num[i] == num[i+2])
}
print(logicals)
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
logicals <- c()
for (i in 1:(length(num)-2)) {
logicals <- c(logicals, num[i] == num[i+2])
}
print(any(logicals))
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
Sandwich <- function(n) {
num <- as.numeric(unlist(str_split(as.character(n), "")))[1:nchar(n)]
logicals <- c()
for (i in 1:(length(num)-2)) {
logicals <- c(logicals, num[i] == num[i+2])
}
return(any(logicals))
}
Sandwich(298081) # TRUE
Sandwich(183081) # FALSE
# Your code here
babynames %>%
arrange(-n) %>%
head(1000)
# Your code here
top1000 <- babynames %>%
arrange(-n) %>%
head(1000)
View(top1000)
# Your code here
top1000 <- babynames %>%
filter(babynames$year >= 2006 & babynames$year <= 2015)
arrange(-n) %>%
head(1000)
# Your code here
top1000 <- babynames %>%
filter(babynames$year >= 2006 & babynames$year <= 2015)
arrange(n) %>%
head(1000)
# Your code here
top1000 <- babynames %>%
filter(babynames$year >= 2006 & babynames$year <= 2015) %>%
arrange(-n) %>%
head(1000)
View(top1000)
help(head)
sum(top100)
sum(top1000)
sum(top1000$n)
# Your code here
top1000 <- babynames %>%
gather(key = year, value = n)
top1000
View(top1000)
help(select)
# Your code here
top1000 <- babynames %>%
gather(key = year, value = n) %>%
filter(year >= 2006 & year <= 2015)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
gather(key = year, value = n)
View(top1000)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(n)
View(top1000)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(n) %>%
group_by(year)
View(top1000)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year)
View(top1000)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, gender)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex)
View(top1000)
top1000
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
summarise(n)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
tally()
View(top1000)
# Your code here
indx <- rep(1000, table(babynames$n))
val1 <- with(babynames, ave(1000, n, FUN = cumsum))
help(rep)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
summarise(cumsum <= 1000)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
split()
help(split)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
split(year)
View(top1000)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex)
View(top1000)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
summarise(n)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
summarise(cumsum
)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
summarise(cumsum)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
summarise(cumsum())
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
summarise(mean)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
summarise()
View(top1000)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
group_by(year, sex) %>%
summarise(cumsum(n))
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
exit9)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n)
View(top1000)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n)
lapply(top1000, cumsum, n)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n)
lapply(top1000$n, cumsum)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n)
tapply(top1000$n, cumsum)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015) %>%
arrange(-n) %>%
filter(sex = "M")
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015 & sex = "M") %>%
arrange(-n)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015 & sex = "M") %>%
arrange(-n)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015 & sex = "M") %>%
arrange(-n)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015 & sex = "M") %>%
arrange(-n)
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015 & sex = "M") %>%
arrange(-n)
# Your code here
top1000 <- babynames %>%
filter(year >= 2006 & year <= 2015 & sex == "M") %>%
arrange(-n)
View(top1000)
